<!DOCTYPE html>
<head>
	<meta charset="UTF-8" />
	<title>VoxelServers</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta property="og:title" content="<%= meta.title %>" />
	<meta property="og:description" content="<%= meta.description %>" />
	<meta property="og:image" content="<%= meta.image %>" />
	<meta property="og:type" content="article" />
	<meta property="article:published_time" content="<%= meta.timestamp %>" />
	<meta name="theme-color" content="#7097c3" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<script src="https://cdn.tailwindcss.com"></script>
	<link rel="stylesheet" href="/v1/static/stylesheets/stylesv2.css" />
	<link rel="icon" type="image/png" href="/v1/static/images/logos/VS_Fox.ico" />
</head>

<body class="bg-gray-900 relative overflow-auto">
	<div id="wave-background" class="absolute inset-0 -z-10">
		<svg
			xmlns="http://www.w3.org/2000/svg"
			version="1.1"
			xmlns:xlink="http://www.w3.org/1999/xlink"
			xmlns:svgjs="http://svgjs.dev/svgjs"
			width="3840"
			height="2160"
			preserveAspectRatio="none"
			viewBox="0 0 3840 2160"
		>
			<g mask='url("#SvgjsMask1518")' fill="none">
				<rect width="3840" height="2160" x="0" y="0" fill="rgba(65, 71, 103, 1)"></rect>
				<path
					class="wave"
					d="M 0,71 C 256,61.8 768,27.8 1280,25 C 1792,22.2 2048,59.2 2560,57 C 3072,54.8 3584,22.6 3840,14L3840 2160L0 2160z"
					fill="rgba(65, 71, 103, 1)"
				></path>
				<path
					class="wave"
					d="M 0,107 C 153.6,118.2 460.8,164.6 768,163 C 1075.2,161.4 1228.8,103 1536,99 C 1843.2,95 1996.8,140.6 2304,143 C 2611.2,145.4 2764.8,105.6 3072,111 C 3379.2,116.4 3686.4,158.2 3840,170L3840 2160L0 2160z"
					fill="rgba(61, 66, 97, 1)"
				></path>
				<path
					class="wave"
					d="M 0,259 C 128,244 384,186.2 640,184 C 896,181.8 1024,246.2 1280,248 C 1536,249.8 1664,193.2 1920,193 C 2176,192.8 2304,246.2 2560,247 C 2816,247.8 2944,195.6 3200,197 C 3456,198.4 3712,242.6 3840,254L3840 2160L0 2160z"
					fill="rgba(56, 61, 90, 1)"
				></path>
				<path
					class="wave"
					d="M 0,288 C 192,299 576,341 960,343 C 1344,345 1536,300.4 1920,298 C 2304,295.6 2496,336.2 2880,331 C 3264,325.8 3648,283.8 3840,272L3840 2160L0 2160z"
					fill="rgba(51, 55, 82, 1)"
				></path>
				<path
					class="wave"
					d="M 0,399 C 192,396.2 576,379.2 960,385 C 1344,390.8 1536,429.6 1920,428 C 2304,426.4 2496,382.8 2880,377 C 3264,371.2 3648,394.6 3840,399L3840 2160L0 2160z"
					fill="rgba(46, 49, 73, 1)"
				></path>
				<path
					class="wave"
					d="M 0,459 C 192,466.6 576,498.2 960,497 C 1344,495.8 1536,451.2 1920,453 C 2304,454.8 2496,500.8 2880,506 C 3264,511.2 3648,484.4 3840,479L3840 2160L0 2160z"
					fill="rgba(40, 42, 63, 1)"
				></path>
				<path
					class="wave"
					d="M 0,588 C 192,578.2 576,538.6 960,539 C 1344,539.4 1536,590.6 1920,590 C 2304,589.4 2496,533.2 2880,536 C 3264,538.8 3648,590.4 3840,604L3840 2160L0 2160z"
					fill="rgba(33, 34, 52, 1)"
				></path>
				<path
					class="wave"
					d="M 0,698 C 192,685 576,639.8 960,633 C 1344,626.2 1536,660.6 1920,664 C 2304,667.4 2496,647 2880,650 C 3264,653 3648,673.2 3840,679L3840 2160L0 2160z"
					fill="rgba(25, 26, 40, 1)"
				></path>
				<path
					class="wave"
					d="M 0,703 C 192,714.4 576,760.6 960,760 C 1344,759.4 1536,697.6 1920,700 C 2304,702.4 2496,768.6 2880,772 C 3264,775.4 3648,728 3840,717L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					d="M 0,828 C 192,826.8 576,815 960,822 C 1344,829 1536,865.4 1920,863 C 2304,860.6 2496,809.8 2880,810 C 3264,810.2 3648,853.2 3840,864L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					d="M 0,903 C 192,911.6 576,948 960,946 C 1344,944 1536,892.8 1920,893 C 2304,893.2 2496,946.4 2880,947 C 3264,947.6 3648,906.2 3840,896L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					d="M 0,1015 C 192,1003.2 576,954.2 960,956 C 1344,957.8 1536,1023 1920,1024 C 2304,1025 2496,962 2880,961 C 3264,960 3648,1007.4 3840,1019L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					d="M 0,1055 C 192,1065.6 576,1107 960,1108 C 1344,1109 1536,1059.4 1920,1060 C 2304,1060.6 2496,1111 2880,1111 C 3264,1111 3648,1070.2 3840,1060L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					d="M 0,1153 C 192,1163.6 576,1208 960,1206 C 1344,1204 1536,1149.8 1920,1143 C 2304,1136.2 2496,1172.2 2880,1172 C 3264,1171.8 3648,1148 3840,1142L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					d="M 0,1216 C 192,1227.6 576,1268.2 960,1274 C 1344,1279.8 1536,1244.4 1920,1245 C 2304,1245.6 2496,1278.8 2880,1277 C 3264,1275.2 3648,1244.2 3840,1236L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					d="M 0,1360 C 192,1350.2 576,1311 960,1311 C 1344,1311 1536,1360.2 1920,1360 C 2304,1359.8 2496,1312 2880,1310 C 3264,1308 3648,1342 3840,1350L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					class="wave"
					d="M 0,1412 C 192,1418.6 576,1444.8 960,1445 C 1344,1445.2 1536,1415.8 1920,1413 C 2304,1410.2 2496,1430.6 2880,1431 C 3264,1431.4 3648,1418.2 3840,1415L3840 2160L0 2160z"
					fill="rgba(17, 17, 27, 1)"
				></path>
				<path
					class="wave"
					d="M 0,1487 C 96,1497.6 288,1538.2 480,1540 C 672,1541.8 768,1492.4 960,1496 C 1152,1499.6 1248,1559.4 1440,1558 C 1632,1556.6 1728,1492.2 1920,1489 C 2112,1485.8 2208,1542.6 2400,1542 C 2592,1541.4 2688,1483.2 2880,1486 C 3072,1488.8 3168,1558 3360,1556 C 3552,1554 3744,1492 3840,1476L3840 2160L0 2160z"
					fill="rgba(91, 76, 115, 1)"
				></path>
				<path
					class="wave"
					d="M 0,1593 C 128,1598.4 384,1621 640,1620 C 896,1619 1024,1584.4 1280,1588 C 1536,1591.6 1664,1636.6 1920,1638 C 2176,1639.4 2304,1599.8 2560,1595 C 2816,1590.2 2944,1613.2 3200,1614 C 3456,1614.8 3712,1602 3840,1599L3840 2160L0 2160z"
					fill="rgba(110, 118, 169, 1)"
				></path>
				<path
					class="wave"
					d="M 0,1721 C 192,1706.4 576,1646.6 960,1648 C 1344,1649.4 1536,1722.2 1920,1728 C 2304,1733.8 2496,1683.2 2880,1677 C 3264,1670.8 3648,1693 3840,1697L3840 2160L0 2160z"
					fill="rgba(112, 151, 195, 1)"
				></path>
				<path
					class="wave"
					d="M 0,1735 C 256,1746.2 768,1787.2 1280,1791 C 1792,1794.8 2048,1750.8 2560,1754 C 3072,1757.2 3584,1796.4 3840,1807L3840 2160L0 2160z"
					fill="rgba(126, 181, 202, 1)"
				></path>
				<path
					class="wave"
					d="M 0,1869 C 128,1864.6 384,1841.8 640,1847 C 896,1852.2 1024,1897.2 1280,1895 C 1536,1892.8 1664,1840 1920,1836 C 2176,1832 2304,1871.4 2560,1875 C 2816,1878.6 2944,1854.8 3200,1854 C 3456,1853.2 3712,1867.6 3840,1871L3840 2160L0 2160z"
					fill="rgba(142, 200, 185, 1)"
				></path>
				<path class="wave" d="M 0,1903 C 384,1919.6 1152,1980 1920,1986 C 2688,1992 3456,1943.6 3840,1933L3840 2160L0 2160z" fill="rgba(185, 210, 181, 1)"></path>
				<path
					class="wave"
					d="M 0,2004 C 256,2013.2 768,2047.8 1280,2050 C 1792,2052.2 2048,2011.2 2560,2015 C 3072,2018.8 3584,2058.2 3840,2069L3840 2160L0 2160z"
					fill="rgba(211, 198, 163, 1)"
				></path>
				<path
					class="wave"
					d="M 0,2143 C 128,2132.8 384,2094.6 640,2092 C 896,2089.4 1024,2131 1280,2130 C 1536,2129 1664,2087.8 1920,2087 C 2176,2086.2 2304,2127.8 2560,2126 C 2816,2124.2 2944,2071.8 3200,2078 C 3456,2084.2 3712,2141.2 3840,2157L3840 2160L0 2160z"
					fill="rgba(224, 175, 165, 1)"
				></path>
			</g>
			<defs>
				<mask id="SvgjsMask1518">
					<rect width="3840" height="2160" fill="#ffffff"></rect>
				</mask>
			</defs>
		</svg>
	</div>

	<!-- Main content -->
	<div class="page-wrapper min-h-screen flex flex-col justify-center items-center py-6 px-8">
		<!-- Refresh Progress Bar -->
		<div id="refresh-bar" class="fixed bottom-0 left-0 h-1 bg-gradient-to-r from-blue-400 to-indigo-500 transition-all duration-1000 ease-out" style="width: 0%"></div>

		<!-- Community Badge -->
		<a class="text-center text-white font-bold text-3xl mb-6 transition hover:shadow-2xl hover:-translate-y-1" href="/v1/servers">VoxelServers</a>

		<!-- Grid for Instances -->
		<div class="grid gap-6 max-w-screen-xl w-full <%= instances.length === 1 ? 'grid-cols-1 justify-center' : 'sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4' %>">
			<% instances.forEach(function(instance) { %>
			<div
				class="instance-card relative rounded-2xl overflow-hidden shadow-lg transition hover:shadow-2xl hover:-translate-y-1 flex flex-col justify-between w-full <%= instance.server.state === 'Offline' ? 'max-h-35' : 'h-full' %> <%= instances.length === 1 ? 'max-w-[500px]' : '' %>"
				style="<%= instances.length === 1 ? 'margin: 0 auto;' : '' %>"
				data-id="<%= instance.instanceId %>"
			>
				<!-- Blurred background + overlay -->
				<div class="absolute inset-0">
					<img src="<%= instance.icon %>" alt="" class="w-full h-full object-cover filter blur-md opacity-80" />
					<div class="absolute inset-0 bg-black bg-opacity-50"></div>
				</div>

				<!-- Inset border indicates status -->
				<div
					class="absolute inset-0 border-2 rounded-2xl pointer-events-none status-border <%= instance.server.state === 'Running' ? 'border-green-500' : instance.server.state === 'Stopping' ? 'border-orange-500' : instance.server.state === 'Stopped' ? 'border-red-500' : instance.server.state === 'Starting' ? 'border-yellow-500' : 'border-gray-500' %>"
				></div>

				<!-- Card content -->
				<div class="relative z-10 p-4 space-y-4 flex-grow">
					<!-- Title -->
					<div class="text-white font-bold text-xl text-center flex justify-center items-center mb-0 leading-none space-x-2">
						<span><%= instance.friendlyName || instance.instanceName %></span>
						<% if (instance.module === 'Minecraft' && instance.welcomeMessage) { %>
						<a
							href="<%= instance.welcomeMessage %>"
							onclick="event.stopPropagation()"
							target="_blank"
							class="bg-blue-500 text-white text-xs px-2 py-0.5 rounded-md hover:bg-blue-400 transition flex items-center h-5"
						>
							Modpack
						</a>
						<% } %>
					</div>

					<!-- Module Name -->
					<div class="text-s text-gray-400 text-center -mt-1 leading-none"><%= instance.moduleName || instance.module %></div>

					<!-- CPU -->
					<% if (instance.server.cpu) { %>
					<div>
						<div class="text-sm text-gray-300">CPU Usage</div>
						<div class="flex justify-between text-white">
							<span class="cpu-percent"><%= instance.server.cpu.Percent %>%</span>
							<span class="cpu-max text-gray-400 text-sm">of <%= instance.server.cpu.MaxValue %>%</span>
						</div>
						<div class="w-full bg-gray-700 rounded-full h-2 mt-1 cpu-bar">
							<div class="bar-inner bg-red-500 h-2 rounded-full" style="width: <%= instance.server.cpu.Percent %>%"></div>
						</div>
					</div>
					<% } else { %>
					<div>
						<div class="text-sm text-gray-300">CPU Usage</div>
						<div class="flex justify-between text-white">
							<span class="cpu-percent">N/A</span>
							<span class="cpu-max text-gray-400 text-sm">of N/A</span>
						</div>
						<div class="w-full bg-gray-700 rounded-full h-2 mt-1 cpu-bar">
							<div class="bar-inner bg-red-500 h-2 rounded-full" style="width: 0%"></div>
						</div>
					</div>
					<% } %>

					<!-- Memory -->
					<% if (instance.server.memory) { %>
					<div>
						<div class="text-sm text-gray-300">Memory</div>
						<div class="flex justify-between text-white">
							<span class="mem-used"><%= (instance.server.memory.RawValue / 1024).toFixed(1) %> GB</span>
							<span class="mem-max text-gray-400 text-sm">of <%= (instance.server.memory.MaxValue / 1024).toFixed(1) %> GB</span>
						</div>
						<div class="w-full bg-gray-700 rounded-full h-2 mt-1 mem-bar">
							<div class="bar-inner bg-blue-500 h-2 rounded-full" style="width: <%= instance.server.memory.Percent %>%"></div>
						</div>
					</div>
					<% } else { %>
					<div>
						<div class="text-sm text-gray-300">Memory</div>
						<div class="flex justify-between text-white">
							<span class="mem-used">N/A</span>
							<span class="mem-max text-gray-400 text-sm">of N/A</span>
						</div>
						<div class="w-full bg-gray-700 rounded-full h-2 mt-1 mem-bar">
							<div class="bar-inner bg-blue-500 h-2 rounded-full" style="width: 0%"></div>
						</div>
					</div>
					<% } %>

					<!-- Performance -->
					<% if (instance.server.performance) { %>
					<div>
						<div class="text-sm text-gray-300">Performance</div>
						<div class="flex justify-between text-white">
							<span class="perf-value"><%= instance.server.performance.RawValue %></span>
							<span class="perf-max text-gray-400 text-sm">of <%= instance.server.performance.MaxValue %> <%= instance.server.performance.Unit %></span>
						</div>
						<div class="w-full bg-gray-700 rounded-full h-2 mt-1 perf-bar">
							<div
								class="bar-inner bg-yellow-500 h-2 rounded-full"
								style="width: <%= (instance.server.performance.RawValue / instance.server.performance.MaxValue) * 100 %>%"
							></div>
						</div>
					</div>
					<% } else if (instance.server.state === 'Offline' && instance.server.performance) { %>
					<div class="text-sm text-gray-300">Performance</div>
					<div class="flex justify-between text-white">
						<span class="perf-value">N/A</span>
						<span class="perf-max text-gray-400 text-sm">of 0 TPS</span>
					</div>
					<div class="w-full bg-gray-700 rounded-full h-2 mt-1 perf-bar">
						<div class="bar-inner bg-yellow-500 h-2 rounded-full" style="width: 0%"></div>
					</div>
					<% } %>

					<!-- Players (heads for Minecraft, bar for everything else) -->
					<% if (instance.module === 'Minecraft') { %>
					<div>
						<div class="text-sm text-gray-300">Players</div>
						<div class="players-container grid grid-cols-10 gap-2 justify-center mt-1">
							<% const players = instance.players || []; const maxPlayers = instance.server.state === 'Running' ? (instance.server.users?.MaxValue ?? players.length) : 8; for
							(let i = 0; i < maxPlayers; i++) { %> <% if (i < players.length && instance.server.state === 'Running') { %>
							<!-- Show actual player heads -->
							<img
								src="/v1/client/playerheads/<%= players[i].name %>"
								alt="<%= players[i].name %>"
								title="<%= players[i].name %>"
								class="w-6 h-6 rounded-full bg-gray-700 object-cover"
							/>
							<% } else { %>
							<!-- Show placeholder slots -->
							<div class="w-6 h-6 rounded-full bg-gray-600 bg-opacity-30"></div>
							<% } %> <% } %>
						</div>
						<div class="players-count text-xs text-gray-400 mt-1 text-center">
							<% if (instance.server.state === 'Running') { %> <%= players.length %> / <%= maxPlayers %> players <% } else { %> Offline <% } %>
						</div>
					</div>
					<% } else { %>
					<!-- For non-Minecraft servers -->
					<div>
						<div class="text-sm text-gray-300">Players</div>
						<div class="flex justify-between text-white">
							<% if (instance.server.state === 'Running') { %>
							<span class="users-count"><%= instance.server.users.RawValue %></span>
							<span class="users-max text-gray-400 text-sm">/ <%= instance.server.users.MaxValue %></span>
							<% } else { %>
							<span class="users-count">0</span>
							<span class="users-max text-gray-400 text-sm">/ 0</span>
							<% } %>
						</div>
						<div class="w-full bg-gray-700 rounded-full h-2 mt-1 users-bar">
							<div class="bg-purple-500 h-2 rounded-full" style="width: <%= instance.server.state === 'Running' ? instance.server.users.Percent : 0 %>%"></div>
						</div>
					</div>
					<% } %>
				</div>

				<!-- Connect section as code block -->
				<div class="connect-status relative z-10 p-4 pt-2 pb-4">
					<% if (instance.server.state === 'Running') { %>
					<div class="text-sm text-gray-300 mb-1">Connect</div>
					<div class="bg-gray-800 font-mono text-white text-sm p-2 rounded-lg flex items-center justify-center space-x-2">
						<code><%= instance.server.ip %>:<%= instance.server.port %></code>
						<button
							class="text-blue-400 hover:text-blue-200"
							onclick="event.stopPropagation(); copyToClipboard('<%= instance.server.ip %>:<%= instance.server.port %>', this)"
						>
							Copy
						</button>
					</div>
					<% } else { %>
					<div class="text-sm text-gray-300">Status</div>
					<div class="text-red-400 font-bold"><%= instance.server.state %></div>
					<% } %>
				</div>
			</div>

			<% }); %>
		</div>
		<script src="/v1/static/scripts/scriptsv2.js"></script>
	</div>
</body>
